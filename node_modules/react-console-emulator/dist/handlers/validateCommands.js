"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0}),exports["default"]=void 0;var _typeof2=_interopRequireDefault(require("@babel/runtime/helpers/typeof")),_defineProperty2=_interopRequireDefault(require("@babel/runtime/helpers/defineProperty")),_commandExists2=_interopRequireDefault(require("../utils/commandExists"));function ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function _objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?ownKeys(Object(b),!0).forEach(function(c){(0,_defineProperty2["default"])(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var _default=function(a,b,d,e){var f,g={help:{description:"Show a list of available commands.",fn:b},clear:{description:"Empty the terminal window.",explicitExec:!0,fn:d}};for(var j in f=e.noDefaults?{}:_objectSpread({},g),a){if(e.ignoreCommandCase&&/[^a-zA-Z0-9-_]/gi.test(j))throw new Error("Command name '".concat(j,"' is invalid; command names can only contain latin characters (A-Z), numbers (0-9) and dashes/underscores (- or _)"));var h=(0,_commandExists2["default"])(f,j,e.ignoreCommandCase),i=h.exists;if(i)throw new Error("Attempting to override existing command '".concat(j,"'; please only supply one definition of a certain command, or set the noDefaults property to enable overriding of existing commands"));if("function"!=typeof a[j].fn)throw new Error("'fn' property of command '".concat(j,"' is invalid; expected 'function', got '").concat((0,_typeof2["default"])(a[j].fn),"'"));a[j].description||(a[j].description="None"),f[j]=a[j]}return f};exports["default"]=_default;