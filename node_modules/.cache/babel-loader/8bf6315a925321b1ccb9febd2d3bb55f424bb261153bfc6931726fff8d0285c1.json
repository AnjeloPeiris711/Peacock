{"ast":null,"code":"var _jsxFileName = \"L:\\\\3rdyearproject\\\\peacock\\\\console-application\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Term from './components/Term.js'; //import Split from \"react-split\";\n\nimport ReactSplit, { SplitDirection } from '@devbookhq/splitter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  useEffect(() => {\n    document.addEventListener('keydown', SplitRight, true);\n  }, []);\n\n  const SplitRight = e => {\n    if (e.altKey && e.shiftKey && e.key === \"+\") {\n      console.log(\"SplitRight\");\n      document.getElementById(\"sRight\").style.display = \"\";\n    }\n  };\n\n  const [sizes, setSizes] = useState([1 / 3 * 100, 1 / 3 * 100]);\n\n  function handleResize(gutterIdx, allSizes) {\n    console.log('gutterIdx', gutterIdx);\n    console.log('allSizes in %', allSizes);\n    setSizes(allSizes);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(ReactSplit, {\n      direction: SplitDirection.Horizontal,\n      gutterClassName: \"custom-gutter\",\n      draggerClassName: \"custom-dragger\",\n      minWidths: [200, 200, 10],\n      onResizeFinished: handleResize,\n      initialSizes: sizes,\n      children: [/*#__PURE__*/_jsxDEV(Term, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Term, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"Oy4TNdRm2nskL+zV78UoyRa2PWc=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["L:/3rdyearproject/peacock/console-application/src/App.js"],"names":["React","useState","useEffect","Term","ReactSplit","SplitDirection","App","document","addEventListener","SplitRight","e","altKey","shiftKey","key","console","log","getElementById","style","display","sizes","setSizes","handleResize","gutterIdx","allSizes","Horizontal"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,sBAAjB,C,CACA;;AACA,OAAOC,UAAP,IAAqBC,cAArB,QAA2C,qBAA3C;;AACA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC1BJ,EAAAA,SAAS,CAAC,MAAI;AACVK,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAoCC,UAApC,EAA+C,IAA/C;AACH,GAFQ,EAEP,EAFO,CAAT;;AAGA,QAAMA,UAAU,GAAEC,CAAD,IAAK;AAClB,QAAGA,CAAC,CAACC,MAAF,IAAYD,CAAC,CAACE,QAAd,IAA0BF,CAAC,CAACG,GAAF,KAAQ,GAArC,EAA0C;AACtCC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAR,MAAAA,QAAQ,CAACS,cAAT,CAAwB,QAAxB,EAAkCC,KAAlC,CAAwCC,OAAxC,GAAkD,EAAlD;AAEH;AACJ,GAND;;AAOA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBnB,QAAQ,CAAC,CAAC,IAAE,CAAF,GAAM,GAAP,EAAY,IAAE,CAAF,GAAM,GAAlB,CAAD,CAAlC;;AACA,WAASoB,YAAT,CAAsBC,SAAtB,EAAyCC,QAAzC,EAA6D;AACzDT,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBO,SAAzB;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BQ,QAA7B;AACAH,IAAAA,QAAQ,CAACG,QAAD,CAAR;AACH;;AACD,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACI,QAAC,UAAD;AACQ,MAAA,SAAS,EAAElB,cAAc,CAACmB,UADlC;AAEQ,MAAA,eAAe,EAAC,eAFxB;AAGQ,MAAA,gBAAgB,EAAC,gBAHzB;AAIQ,MAAA,SAAS,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,EAAX,CAJnB;AAKQ,MAAA,gBAAgB,EAAEH,YAL1B;AAMQ,MAAA,YAAY,EAAEF,KANtB;AAAA,8BAQI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cARJ,eASI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GAhCuBb,G;;KAAAA,G","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Term from './components/Term.js'\n//import Split from \"react-split\";\nimport ReactSplit, { SplitDirection } from '@devbookhq/splitter';\nexport default function App() {\n    useEffect(()=>{\n        document.addEventListener('keydown',SplitRight,true)\n    },[])\n    const SplitRight=(e)=>{\n        if(e.altKey && e.shiftKey && e.key===\"+\") {\n            console.log(\"SplitRight\");\n            document.getElementById(\"sRight\").style.display = \"\";\n\n        }\n    }\n    const [sizes, setSizes] = useState([1/3 * 100, 1/3 * 100]);\n    function handleResize(gutterIdx: number, allSizes: number[]) {\n        console.log('gutterIdx', gutterIdx);\n        console.log('allSizes in %', allSizes);\n        setSizes(allSizes);\n    }\n    return (\n        <div className='container'>\n            <ReactSplit\n                    direction={SplitDirection.Horizontal}\n                    gutterClassName=\"custom-gutter\"\n                    draggerClassName=\"custom-dragger\"\n                    minWidths={[200, 200, 10]}\n                    onResizeFinished={handleResize}\n                    initialSizes={sizes}\n                >\n                <Term/>\n                <Term/>\n            </ReactSplit>\n        </div>\n    )\n}\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}