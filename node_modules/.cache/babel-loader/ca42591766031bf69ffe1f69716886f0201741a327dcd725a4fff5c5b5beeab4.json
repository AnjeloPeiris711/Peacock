{"ast":null,"code":"var _jsxFileName = \"L:\\\\3rdyearproject\\\\peacock\\\\console-application\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Term from './components/Term.js'; //import Split from \"react-split\";\n\nimport ReactSplit, { SplitDirection } from '@devbookhq/splitter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  useEffect(() => {\n    document.addEventListener('keydown', SplitRight, true);\n  }, []);\n  const [sizes, setSizes] = useState([1 / 2 * 100, 1 / 3 * 100]);\n\n  const SplitRight = e => {\n    if (e.altKey && e.shiftKey && e.key === \"+\") {\n      console.log(\"SplitRight\");\n      document.getElementById(\"sRight\").style.display = \"\";\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(ReactSplit, {\n      direction: SplitDirection.Horizontal,\n      onResizeFinished: handleResize,\n      gutterClassName: \"custom-gutter\",\n      draggerClassName: \"custom-dragger\",\n      children: [/*#__PURE__*/_jsxDEV(Term, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(ReactSplit, {\n        direction: SplitDirection.Horizontal,\n        children: /*#__PURE__*/_jsxDEV(Term, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"DEa9Z54oM04dAMj1RDqsag6mKss=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["L:/3rdyearproject/peacock/console-application/src/App.js"],"names":["React","useState","useEffect","Term","ReactSplit","SplitDirection","App","document","addEventListener","SplitRight","sizes","setSizes","e","altKey","shiftKey","key","console","log","getElementById","style","display","Horizontal","handleResize"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,sBAAjB,C,CACA;;AACA,OAAOC,UAAP,IAAqBC,cAArB,QAA2C,qBAA3C;;AACA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC1BJ,EAAAA,SAAS,CAAC,MAAI;AACVK,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAoCC,UAApC,EAA+C,IAA/C;AACH,GAFQ,EAEP,EAFO,CAAT;AAGA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,CAAC,IAAE,CAAF,GAAM,GAAP,EAAY,IAAE,CAAF,GAAM,GAAlB,CAAD,CAAlC;;AACA,QAAMQ,UAAU,GAAEG,CAAD,IAAK;AAClB,QAAGA,CAAC,CAACC,MAAF,IAAYD,CAAC,CAACE,QAAd,IAA0BF,CAAC,CAACG,GAAF,KAAQ,GAArC,EAA0C;AACtCC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAV,MAAAA,QAAQ,CAACW,cAAT,CAAwB,QAAxB,EAAkCC,KAAlC,CAAwCC,OAAxC,GAAkD,EAAlD;AACH;AACJ,GALD;;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACI,QAAC,UAAD;AACI,MAAA,SAAS,EAAEf,cAAc,CAACgB,UAD9B;AAEI,MAAA,gBAAgB,EAAEC,YAFtB;AAII,MAAA,eAAe,EAAC,eAJpB;AAKI,MAAA,gBAAgB,EAAC,gBALrB;AAAA,8BAOE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cAPF,eAQI,QAAC,UAAD;AACI,QAAA,SAAS,EAAEjB,cAAc,CAACgB,UAD9B;AAAA,+BAGI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH;;GA9BuBf,G;;KAAAA,G","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Term from './components/Term.js'\n//import Split from \"react-split\";\nimport ReactSplit, { SplitDirection } from '@devbookhq/splitter';\nexport default function App() {\n    useEffect(()=>{\n        document.addEventListener('keydown',SplitRight,true)\n    },[])\n    const [sizes, setSizes] = useState([1/2 * 100, 1/3 * 100]);\n    const SplitRight=(e)=>{\n        if(e.altKey && e.shiftKey && e.key===\"+\") {\n            console.log(\"SplitRight\");\n            document.getElementById(\"sRight\").style.display = \"\";\n        }\n    }\n    return (\n        <div className='container'>\n            <ReactSplit\n                direction={SplitDirection.Horizontal}\n                onResizeFinished={handleResize}\n                \n                gutterClassName=\"custom-gutter\"\n                draggerClassName=\"custom-dragger\"\n            >\n              <Term/>\n                <ReactSplit\n                    direction={SplitDirection.Horizontal}\n                >\n                    <Term/>\n                </ReactSplit>\n            </ReactSplit>\n        </div>\n\n    )\n}\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}